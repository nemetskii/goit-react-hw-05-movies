{"version":3,"file":"static/js/186.08065e4c.chunk.js","mappings":"yNAiCA,UA7BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACUC,EAAAA,EAAAA,IAAiBP,GAD3B,OACVQ,EADU,OAEhBJ,EAAWI,EAAYC,MAAM,EAAG,IAFhB,2CAAH,qDAIfH,GACD,GAAE,CAACN,IAEAG,GAAWA,EAAQO,OAAS,GAE5B,yBACGP,EAAQQ,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GACzB,OACE,4BACE,uBAAIF,KACJ,uBAAIC,MAFIC,EAKb,OAIA,oEACR,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { fetchMovieReview } from 'moviesAPI/fetchMoviesData';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const reviewsData = await fetchMovieReview(movieId);\n      setReviews(reviewsData.slice(0, 4));\n    };\n    fetchData();\n  }, [movieId]);\n\n  if (reviews && reviews.length > 0) {\n    return (\n      <div>\n        {reviews.map(actor => {\n          const { author, content, id } = actor;\n          return (\n            <div key={id}>\n              <p>{author}</p>\n              <p>{content}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n  return <div>We don't have any reviews for this film</div>;\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchData","fetchMovieReview","reviewsData","slice","length","map","actor","author","content","id"],"sourceRoot":""}